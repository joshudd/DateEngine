{"ast":null,"code":"var _jsxFileName = \"/Users/josh/code/personal/monday/quickstart-react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\"; //Explore more Monday React Components here: https://style.monday.com/\n\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport TextField from \"monday-ui-react-core/dist/TextField.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.getDateColumnInfo = res => {\n      console.log(\"detail\", res.data.boards[0].columns);\n      let dateIds = [];\n\n      for (let i = 0; i < res.data.boards[0].columns.length; i++) {\n        let tempPair = [];\n\n        if (res.data.boards[0].columns[i].type === \"date\") {\n          this.state.dateColumns.push(res.data.boards[0].columns[i].title);\n          tempPair = [res.data.boards[0].columns[i].title, res.data.boards[0].columns[i].id];\n          dateIds.push(tempPair);\n        }\n      }\n\n      this.setState({\n        dateIDS: dateIds\n      });\n      console.log(\"id array\", dateIds);\n      console.log(\"date columns\", this.state.dateColumns); // const st = dateIds;\n      // return st;\n    };\n\n    this.updateDate = () => {\n      monday.api('mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }', {\n        variables: {\n          boardID: this.state.context.boardIds,\n          itemID: this.state.dateIDS[0]\n        },\n        columnID: this.state.dateColumns[0]\n      });\n      console.log(\"end mutation\");\n    };\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n      console.log(\"settings!\", res);\n    };\n\n    this.state = {\n      settings: {\n        \"text\": \"default\",\n        \"columnName\": \"date\"\n      },\n      context: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: false\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", res => {\n      console.log(\"settings early\", res.data);\n      this.getSettings(res); // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n    monday.listen(\"settings\", res => {\n      console.log(\"update\", res.data);\n      this.updateDate(); // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(\"context early\", res.data);\n      monday.api('query ($boardIds: [Int]) { boards (ids:$boardIds) { columns { id type title } } }', {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        console.log(\"here!\", res);\n        this.getDateColumnInfo(res);\n      });\n    });\n  } // context \\/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        iconName: \"fa fa-square\",\n        placeholder: \"type here\",\n        showCharCount: true,\n        title: \"Name\",\n        validation: {\n          text: 'Helper text'\n        },\n        wrapperClassName: \"monday-storybook-text-field_size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateDate(),\n        children: \"Activate Lasers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","AttentionBox","TextField","monday","App","Component","constructor","props","getDateColumnInfo","res","console","log","data","boards","columns","dateIds","i","length","tempPair","type","state","dateColumns","push","title","id","setState","dateIDS","updateDate","api","variables","boardID","context","boardIds","itemID","columnID","getSettings","settings","itemIds","componentDidMount","listen","then","boardData","render","text"],"sources":["/Users/josh/code/personal/monday/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\"\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\"\nimport TextField from \"monday-ui-react-core/dist/TextField.js\"\n\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {\n        \"text\": \"default\",\n        \"columnName\": \"date\"\n      },\n      context: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: false\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    \n    monday.listen(\"settings\", res => {\n      console.log(\"settings early\", res.data);\n      this.getSettings(res);\n      // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    }); \n\n    monday.listen(\"settings\", res => {\n      console.log(\"update\", res.data);\n      this.updateDate();\n      // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    }); \n\n    monday.listen(\"context\", res => {\n      this.setState({context: res.data});\n      console.log(\"context early\", res.data);\n      monday\n        .api('query ($boardIds: [Int]) { boards (ids:$boardIds) { columns { id type title } } }',\n        { variables: {boardIds: this.state.context.boardIds} }\n        )\n        .then(res => {\n        this.setState({boardData: res.data});\n        console.log(\"here!\", res);\n        this.getDateColumnInfo(res);\n      });\n    })\n\n  }\n\n  // context \\/\n\n\n  getDateColumnInfo = (res) => {\n    console.log(\"detail\", res.data.boards[0].columns);\n    let dateIds = [];\n    for (let i = 0; i < res.data.boards[0].columns.length; i++) {\n      let tempPair = [];\n      if (res.data.boards[0].columns[i].type === \"date\") {\n        this.state.dateColumns.push(res.data.boards[0].columns[i].title);\n        tempPair = [res.data.boards[0].columns[i].title, res.data.boards[0].columns[i].id];\n        dateIds.push(tempPair);\n      }\n    }\n    this.setState({dateIDS: dateIds});\n    console.log(\"id array\", dateIds);\n    console.log(\"date columns\", this.state.dateColumns);\n\n    // const st = dateIds;\n    // return st;\n  }\n\n  updateDate = () => {\n\n    monday\n        .api('mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }',\n        { variables: {boardID: this.state.context.boardIds, itemID: this.state.dateIDS[0]}, columnID: this.state.dateColumns[0]}\n        )\n        console.log(\"end mutation\");\n  }\n\n  // settings \\/\n\n  getSettings = (res) => {\n    this.setState({ settings: res.data });\n    console.log(\"settings!\", res);\n  };\n\n\n  render() {\n    return <div className=\"App\">\n      <TextField\n            iconName=\"fa fa-square\"\n            placeholder=\"type here\"\n            showCharCount\n            title=\"Name\"\n            validation={{\n                text: 'Helper text'\n        }}\n        wrapperClassName=\"monday-storybook-text-field_size\"\n        />\n        <button onClick={updateDate()}>\n          Activate Lasers\n        </button>\n    </div>\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}