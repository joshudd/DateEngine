{"ast":null,"code":"var _jsxFileName = \"/Users/josh/code/personal/monday/quickstart-react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\"; //Explore more Monday React Components here: https://style.monday.com/\n\nimport Search from \"monday-ui-react-core/dist/Search.js\";\nimport TextField from \"monday-ui-react-core/dist/TextField.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.getDateColumnInfo = res => {\n      console.log(\"detail\", res.data.boards[0].columns);\n      let dateIds = [];\n\n      for (let i = 0; i < res.data.boards[0].columns.length; i++) {\n        let tempPair = [];\n\n        if (res.data.boards[0].columns[i].type === \"date\") {\n          this.state.dateColumns.push(res.data.boards[0].columns[i].title);\n          tempPair = [res.data.boards[0].columns[i].title, res.data.boards[0].columns[i].id];\n          dateIds.push(tempPair);\n        }\n      }\n\n      this.setState({\n        dateIDS: dateIds\n      });\n      console.log(\"id array\", dateIds);\n      console.log(\"date columns\", this.state.dateColumns); // const st = dateIds;\n      // return st;\n    };\n\n    this.updateDate = () => {\n      monday.api('mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }', {\n        variables: {\n          boardID: this.state.context.boardIds,\n          itemID: this.state.dateIDS[0]\n        },\n        columnID: this.state.dateColumns[0]\n      });\n      console.log(\"end mutation\");\n    };\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n      console.log(\"settings!\", res);\n    };\n\n    this.state = {\n      settings: {\n        text: \"Column Title\",\n        columnName: \"date\"\n      },\n      context: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: false\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", res => {\n      console.log(\"settings early\", res.data);\n      this.getSettings(res); // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n    monday.listen(\"settings\", res => {\n      console.log(\"update\", res.data);\n      this.updateDate(); // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(\"context early\", res.data);\n      monday.api(\"query ($boardIds: [Int]) { boards (ids:$boardIds) { columns { id type title } } }\", {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        console.log(\"here!\", res);\n        this.getDateColumnInfo(res);\n      });\n    });\n  } // context \\/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsField\",\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              placeholder: this.state.settings.text,\n              size: Search.sizes.MEDIUM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsField\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"# of Days\",\n              size: TextField.sizes.MEDIUM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"# of Days\",\n              size: TextField.sizes.MEDIUM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","Search","TextField","monday","App","Component","constructor","props","getDateColumnInfo","res","console","log","data","boards","columns","dateIds","i","length","tempPair","type","state","dateColumns","push","title","id","setState","dateIDS","updateDate","api","variables","boardID","context","boardIds","itemID","columnID","getSettings","settings","text","columnName","itemIds","componentDidMount","listen","then","boardData","render","sizes","MEDIUM"],"sources":["/Users/josh/code/personal/monday/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport Search from \"monday-ui-react-core/dist/Search.js\";\nimport TextField from \"monday-ui-react-core/dist/TextField.js\";\n\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {\n        text: \"Column Title\",\n        columnName: \"date\",\n      },\n      context: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: false,\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n\n    monday.listen(\"settings\", (res) => {\n      console.log(\"settings early\", res.data);\n      this.getSettings(res);\n      // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n\n    monday.listen(\"settings\", (res) => {\n      console.log(\"update\", res.data);\n      this.updateDate();\n      // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n\n    monday.listen(\"context\", (res) => {\n      this.setState({ context: res.data });\n      console.log(\"context early\", res.data);\n      monday\n        .api(\n          \"query ($boardIds: [Int]) { boards (ids:$boardIds) { columns { id type title } } }\",\n          { variables: { boardIds: this.state.context.boardIds } }\n        )\n        .then((res) => {\n          this.setState({ boardData: res.data });\n          console.log(\"here!\", res);\n          this.getDateColumnInfo(res);\n        });\n    });\n  }\n\n  // context \\/\n\n  getDateColumnInfo = (res) => {\n    console.log(\"detail\", res.data.boards[0].columns);\n    let dateIds = [];\n    for (let i = 0; i < res.data.boards[0].columns.length; i++) {\n      let tempPair = [];\n      if (res.data.boards[0].columns[i].type === \"date\") {\n        this.state.dateColumns.push(res.data.boards[0].columns[i].title);\n        tempPair = [\n          res.data.boards[0].columns[i].title,\n          res.data.boards[0].columns[i].id,\n        ];\n        dateIds.push(tempPair);\n      }\n    }\n    this.setState({ dateIDS: dateIds });\n    console.log(\"id array\", dateIds);\n    console.log(\"date columns\", this.state.dateColumns);\n\n    // const st = dateIds;\n    // return st;\n  };\n\n  updateDate = () => {\n    monday.api(\n      'mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }',\n      {\n        variables: {\n          boardID: this.state.context.boardIds,\n          itemID: this.state.dateIDS[0],\n        },\n        columnID: this.state.dateColumns[0],\n      }\n    );\n    console.log(\"end mutation\");\n  };\n\n  // settings \\/\n\n  getSettings = (res) => {\n    this.setState({ settings: res.data });\n    console.log(\"settings!\", res);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"mainSection\">\n          <div className=\"header\">\n            <h1>welcome</h1>\n          </div>\n          <div className=\"options\">\n            <div className=\"optionsField\">\n              <Search\n                placeholder={this.state.settings.text}\n                size={Search.sizes.MEDIUM}\n              />\n            </div>\n            <div className=\"optionsField\">\n              <TextField\n                placeholder=\"# of Days\"\n                size={TextField.sizes.MEDIUM}\n              />\n              <TextField\n                placeholder=\"# of Days\"\n                size={TextField.sizes.MEDIUM}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}