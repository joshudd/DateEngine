{"ast":null,"code":"var _jsxFileName = \"/Users/josh/code/personal/monday/date engine/date engine board view/src/components/Selections.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Selections.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nconst Selections = () => {\n  _s();\n\n  const [context, setContext] = useState();\n  const [boardData, setBoardData] = useState();\n  const [dateColumnOpts, setDateColumnOpts] = useState();\n  const [numberColumnOpts, setNumberColumnOpts] = useState();\n  useEffect(() => {\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n      console.log(res.data); // get board data and assign state value\n\n      monday.api(\"query ($boardIds: [Int]) { boards (ids:$boardIds) { name id columns { id title type } items { id name } } }\", {\n        variables: {\n          boardIds: res.data.boardIds\n        }\n      }).then(res => {\n        setBoardData(res.data);\n        console.log(\"query finish: \", res.data.boards);\n        getOptions(res);\n      });\n    });\n  }, []);\n\n  const getOptions = res => {\n    let dateArr = [];\n    let numberArr = [];\n    let options = res.data.boards[0].columns;\n    console.log(\"source column array\", options);\n\n    for (let i = 0; i < options.length; i++) {\n      // type \"lookup\" for mirror support\n      if (options[i].type === \"date\" || options[i].type === \"lookup\") {\n        dateArr.push({\n          label: options[i].title,\n          value: options[i].id\n        });\n      } else if (options[i].type === \"number\" || options[i].type === \"lookup\") {\n        numberArr.push({\n          label: options[i].title,\n          value: options[i].id\n        });\n      }\n    }\n\n    setDateColumnOpts(dateArr);\n    setNumberColumnOpts(numberArr);\n  };\n\n  const renderButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-submit\",\n        size: Button.sizes.MEDIUM,\n        color: Button.colors.PRIMARY // onClick={() => {\n        //   this.updateDate();\n        // }}\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderDropdowns = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdowns\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"sourceColumn\",\n        placeholder: \"Select Date Source\",\n        noOptionsMessage: () => \"No date columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: dateColumnOpts // onOptionSelect={(e) => this.setBoardSelect(e)}\n        // onOptionSelect={function noRefCheck() {\n        //   console.log(\"dropdown selected\");\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"numberColumn\",\n        placeholder: \"Select Number Source\",\n        noOptionsMessage: () => \"No number columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: numberColumnOpts // onOptionSelect={(e) => this.setSourceColumnSelect(e)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"targetColumn\",\n        placeholder: \"Select Target Date\",\n        noOptionsMessage: () => \"No date columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: dateColumnOpts // onOptionSelect={(e) => this.setTargetColumnSelect(e)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"selections\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"enter info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderDropdowns()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Selections, \"LoT5/F7aa9EPFtjJVU8u+Vj1OeQ=\");\n\n_c = Selections;\nexport default Selections;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selections\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","Dropdown","Button","monday","Selections","context","setContext","boardData","setBoardData","dateColumnOpts","setDateColumnOpts","numberColumnOpts","setNumberColumnOpts","execute","listen","res","data","console","log","api","variables","boardIds","then","boards","getOptions","dateArr","numberArr","options","columns","i","length","type","push","label","title","value","id","renderButtons","sizes","MEDIUM","colors","PRIMARY","renderDropdowns","size"],"sources":["/Users/josh/code/personal/monday/date engine/date engine board view/src/components/Selections.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Selections.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\n\nconst monday = mondaySdk();\n\nconst Selections = () => {\n  const [context, setContext] = useState();\n  const [boardData, setBoardData] = useState();\n  const [dateColumnOpts, setDateColumnOpts] = useState();\n  const [numberColumnOpts, setNumberColumnOpts] = useState();\n\n  useEffect(() => {\n    monday.execute(\"valueCreatedForUser\");\n\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n      console.log(res.data);\n      // get board data and assign state value\n      monday\n        .api(\n          \"query ($boardIds: [Int]) { boards (ids:$boardIds) { name id columns { id title type } items { id name } } }\",\n          {\n            variables: { boardIds: res.data.boardIds },\n          }\n        )\n        .then((res) => {\n          setBoardData(res.data);\n          console.log(\"query finish: \", res.data.boards);\n          getOptions(res);\n        });\n    });\n  }, []);\n\n  const getOptions = (res) => {\n    let dateArr = [];\n    let numberArr = [];\n    let options = res.data.boards[0].columns;\n    console.log(\"source column array\", options);\n    for (let i = 0; i < options.length; i++) {\n      // type \"lookup\" for mirror support\n      if (options[i].type === \"date\" || options[i].type === \"lookup\") {\n        dateArr.push({ label: options[i].title, value: options[i].id });\n      } else if (options[i].type === \"number\" || options[i].type === \"lookup\") {\n        numberArr.push({ label: options[i].title, value: options[i].id });\n      }\n    }\n    setDateColumnOpts(dateArr);\n    setNumberColumnOpts(numberArr);\n  };\n\n  const renderButtons = () => {\n    return (\n      <div className=\"button\">\n        <Button\n          className=\"button-submit\"\n          size={Button.sizes.MEDIUM}\n          color={Button.colors.PRIMARY}\n          // onClick={() => {\n          //   this.updateDate();\n          // }}\n        >\n          Submit\n        </Button>\n      </div>\n    );\n  };\n\n  const renderDropdowns = () => {\n    return (\n      <div className=\"dropdowns\">\n        <Dropdown\n          className=\"sourceColumn\"\n          placeholder={\"Select Date Source\"}\n          noOptionsMessage={() => \"No date columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={dateColumnOpts}\n          // onOptionSelect={(e) => this.setBoardSelect(e)}\n          // onOptionSelect={function noRefCheck() {\n          //   console.log(\"dropdown selected\");\n          // }}\n        />\n\n        <Dropdown\n          className=\"numberColumn\"\n          placeholder={\"Select Number Source\"}\n          noOptionsMessage={() => \"No number columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={numberColumnOpts}\n          // onOptionSelect={(e) => this.setSourceColumnSelect(e)}\n        />\n\n        <Dropdown\n          className=\"targetColumn\"\n          placeholder={\"Select Target Date\"}\n          noOptionsMessage={() => \"No date columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={dateColumnOpts}\n          // onOptionSelect={(e) => this.setTargetColumnSelect(e)}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div id=\"selections\">\n      <div className=\"header\">\n        <h1>enter info:</h1>\n      </div>\n      <div className=\"content\">\n        <div>{renderDropdowns()}</div>\n        <div>{renderButtons()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Selections;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}