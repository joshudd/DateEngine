{"ast":null,"code":"var _jsxFileName = \"/Users/josh/code/personal/monday/date engine/date engine board view/src/components/Selections.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Selections.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport \"./DateChange.js\";\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nconst Selections = () => {\n  _s();\n\n  const [context, setContext] = useState();\n  const [boardData, setBoardData] = useState();\n  const [dateColumnOpts, setDateColumnOpts] = useState();\n  const [numericColumnOpts, setNumericColumnOpts] = useState();\n  const [selections, setSelections] = useState([null, null, null]);\n  useEffect(() => {\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n      console.log(res.data); // get board data and assign state value\n\n      monday.api(\"query ($boardIds: [Int]) { boards (ids:$boardIds) { name id columns { id title type } items { id name } } }\", {\n        variables: {\n          boardIds: res.data.boardIds\n        }\n      }).then(res => {\n        setBoardData(res.data);\n        console.log(\"query finish: \", res.data.boards);\n        getOptions(res);\n      });\n    });\n  }, []);\n\n  const getOptions = res => {\n    let dateArr = [];\n    let numericArr = [];\n    let options = res.data.boards[0].columns;\n    console.log(\"source column array\", options);\n\n    for (let i = 0; i < options.length; i++) {\n      // type \"lookup\" for mirror support\n      if (options[i].type === \"date\" || options[i].type === \"lookup\") {\n        dateArr.push({\n          label: options[i].title,\n          value: options[i].id\n        });\n      } else if (options[i].type === \"numeric\" || options[i].type === \"lookup\") {\n        numericArr.push({\n          label: options[i].title,\n          value: options[i].id\n        });\n      }\n    }\n\n    setDateColumnOpts(dateArr);\n    setNumericColumnOpts(numericArr);\n  };\n\n  getOrigDate = () => {\n    monday.api(\"query ($boardID: [Int], $itemID: [Int], $columnID: [String]) { boards (ids:$boardID) { items (ids:$itemID) { column_values (ids:$columnID) { text } } } }\", {\n      variables: {\n        boardID: parseInt(this.state.boardSelect),\n        columnID: this.state.sourceColumnSelect,\n        itemID: parseInt(this.state.itemSelect)\n      }\n    }).then(res => {\n      const dateText = res.data.boards[0].items[0].column_values[0].text;\n      this.setState({\n        origDateValue: dateText\n      });\n      console.log(\"getOrigDate \", this.state.origDateValue, dateText);\n    });\n  };\n\n  const updateDate = () => {\n    console.log(\"submit press\", selections);\n    let x = manipulateDate();\n  };\n\n  const renderDropdowns = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdowns\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"sourceColumn\",\n        placeholder: \"Select Date Source\",\n        noOptionsMessage: () => \"No date columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: dateColumnOpts // onOptionSelect={(e) => this.setBoardSelect(e)}\n        ,\n        onOptionSelect: function noRefCheck(selection) {\n          console.log(\"dropdown selected\", selection);\n          setSelections([selection, selections[1], selections[2]]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"numericColumn\",\n        placeholder: \"Select Number Source\",\n        noOptionsMessage: () => \"No number columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: numericColumnOpts,\n        onOptionSelect: function noRefCheck(selection) {\n          console.log(\"dropdown selected\", selection);\n          setSelections([selections[0], selection, selections[2]]);\n        } // onOptionSelect={(e) => this.setSourceColumnSelect(e)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"targetColumn\",\n        placeholder: \"Select Target Date\",\n        noOptionsMessage: () => \"No date columns found in the board.\",\n        size: Dropdown.size.MEDIUM,\n        options: dateColumnOpts,\n        onOptionSelect: function noRefCheck(selection) {\n          console.log(\"dropdown selected\", selection);\n          setSelections([selections[0], selections[1], selection]);\n        } // onOptionSelect={(e) => this.setTargetColumnSelect(e)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"selections\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [renderDropdowns(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-submit\",\n          size: Button.sizes.MEDIUM,\n          color: Button.colors.PRIMARY,\n          onClick: () => {\n            updateDate();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Selections, \"wP46ZmhssO2ZUqwpHLFMJfDKjOQ=\");\n\n_c = Selections;\nexport default Selections;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selections\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","Dropdown","Button","monday","Selections","context","setContext","boardData","setBoardData","dateColumnOpts","setDateColumnOpts","numericColumnOpts","setNumericColumnOpts","selections","setSelections","execute","listen","res","data","console","log","api","variables","boardIds","then","boards","getOptions","dateArr","numericArr","options","columns","i","length","type","push","label","title","value","id","getOrigDate","boardID","parseInt","state","boardSelect","columnID","sourceColumnSelect","itemID","itemSelect","dateText","items","column_values","text","setState","origDateValue","updateDate","x","manipulateDate","renderDropdowns","size","MEDIUM","noRefCheck","selection","sizes","colors","PRIMARY"],"sources":["/Users/josh/code/personal/monday/date engine/date engine board view/src/components/Selections.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Selections.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport \"./DateChange.js\";\n\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\n\nconst monday = mondaySdk();\n\nconst Selections = () => {\n  const [context, setContext] = useState();\n  const [boardData, setBoardData] = useState();\n  const [dateColumnOpts, setDateColumnOpts] = useState();\n  const [numericColumnOpts, setNumericColumnOpts] = useState();\n  const [selections, setSelections] = useState([null, null, null]);\n\n  useEffect(() => {\n    monday.execute(\"valueCreatedForUser\");\n\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n      console.log(res.data);\n      // get board data and assign state value\n      monday\n        .api(\n          \"query ($boardIds: [Int]) { boards (ids:$boardIds) { name id columns { id title type } items { id name } } }\",\n          {\n            variables: { boardIds: res.data.boardIds },\n          }\n        )\n        .then((res) => {\n          setBoardData(res.data);\n          console.log(\"query finish: \", res.data.boards);\n          getOptions(res);\n        });\n    });\n  }, []);\n\n  const getOptions = (res) => {\n    let dateArr = [];\n    let numericArr = [];\n    let options = res.data.boards[0].columns;\n    console.log(\"source column array\", options);\n    for (let i = 0; i < options.length; i++) {\n      // type \"lookup\" for mirror support\n      if (options[i].type === \"date\" || options[i].type === \"lookup\") {\n        dateArr.push({ label: options[i].title, value: options[i].id });\n      } else if (\n        options[i].type === \"numeric\" ||\n        options[i].type === \"lookup\"\n      ) {\n        numericArr.push({ label: options[i].title, value: options[i].id });\n      }\n    }\n    setDateColumnOpts(dateArr);\n    setNumericColumnOpts(numericArr);\n  };\n\n  getOrigDate = () => {\n    monday\n      .api(\n        \"query ($boardID: [Int], $itemID: [Int], $columnID: [String]) { boards (ids:$boardID) { items (ids:$itemID) { column_values (ids:$columnID) { text } } } }\",\n        {\n          variables: {\n            boardID: parseInt(this.state.boardSelect),\n            columnID: this.state.sourceColumnSelect,\n            itemID: parseInt(this.state.itemSelect),\n          },\n        }\n      )\n      .then((res) => {\n        const dateText = res.data.boards[0].items[0].column_values[0].text;\n        this.setState({ origDateValue: dateText });\n        console.log(\"getOrigDate \", this.state.origDateValue, dateText);\n      });\n  };\n\n  const updateDate = () => {\n    console.log(\"submit press\", selections);\n    let x = manipulateDate();\n  };\n\n  const renderDropdowns = () => {\n    return (\n      <div className=\"dropdowns\">\n        <Dropdown\n          className=\"sourceColumn\"\n          placeholder={\"Select Date Source\"}\n          noOptionsMessage={() => \"No date columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={dateColumnOpts}\n          // onOptionSelect={(e) => this.setBoardSelect(e)}\n          onOptionSelect={function noRefCheck(selection) {\n            console.log(\"dropdown selected\", selection);\n            setSelections([selection, selections[1], selections[2]]);\n          }}\n        />\n\n        <Dropdown\n          className=\"numericColumn\"\n          placeholder={\"Select Number Source\"}\n          noOptionsMessage={() => \"No number columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={numericColumnOpts}\n          onOptionSelect={function noRefCheck(selection) {\n            console.log(\"dropdown selected\", selection);\n            setSelections([selections[0], selection, selections[2]]);\n          }}\n          // onOptionSelect={(e) => this.setSourceColumnSelect(e)}\n        />\n\n        <Dropdown\n          className=\"targetColumn\"\n          placeholder={\"Select Target Date\"}\n          noOptionsMessage={() => \"No date columns found in the board.\"}\n          size={Dropdown.size.MEDIUM}\n          options={dateColumnOpts}\n          onOptionSelect={function noRefCheck(selection) {\n            console.log(\"dropdown selected\", selection);\n            setSelections([selections[0], selections[1], selection]);\n          }}\n          // onOptionSelect={(e) => this.setTargetColumnSelect(e)}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div id=\"selections\">\n      <div className=\"header\">\n        <h1>Enter Info</h1>\n      </div>\n      <div className=\"content\">\n        {renderDropdowns()}\n        <div className=\"button\">\n          <Button\n            className=\"button-submit\"\n            size={Button.sizes.MEDIUM}\n            color={Button.colors.PRIMARY}\n            onClick={() => {\n              updateDate();\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Selections;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAO,oCAAP;AACA,OAAO,iBAAP;AAEA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;;AAEA,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,MAAMI,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;EACA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,EAApD;EACA,MAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,EAA1D;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACdI,MAAM,CAACY,OAAP,CAAe,qBAAf;IAEAZ,MAAM,CAACa,MAAP,CAAc,SAAd,EAA0BC,GAAD,IAAS;MAChCX,UAAU,CAACW,GAAG,CAACC,IAAL,CAAV;MACAC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB,EAFgC,CAGhC;;MACAf,MAAM,CACHkB,GADH,CAEI,6GAFJ,EAGI;QACEC,SAAS,EAAE;UAAEC,QAAQ,EAAEN,GAAG,CAACC,IAAJ,CAASK;QAArB;MADb,CAHJ,EAOGC,IAPH,CAOSP,GAAD,IAAS;QACbT,YAAY,CAACS,GAAG,CAACC,IAAL,CAAZ;QACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,GAAG,CAACC,IAAJ,CAASO,MAAvC;QACAC,UAAU,CAACT,GAAD,CAAV;MACD,CAXH;IAYD,CAhBD;EAiBD,CApBQ,EAoBN,EApBM,CAAT;;EAsBA,MAAMS,UAAU,GAAIT,GAAD,IAAS;IAC1B,IAAIU,OAAO,GAAG,EAAd;IACA,IAAIC,UAAU,GAAG,EAAjB;IACA,IAAIC,OAAO,GAAGZ,GAAG,CAACC,IAAJ,CAASO,MAAT,CAAgB,CAAhB,EAAmBK,OAAjC;IACAX,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,OAAnC;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACvC;MACA,IAAIF,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,KAAoB,MAApB,IAA8BJ,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,KAAoB,QAAtD,EAAgE;QAC9DN,OAAO,CAACO,IAAR,CAAa;UAAEC,KAAK,EAAEN,OAAO,CAACE,CAAD,CAAP,CAAWK,KAApB;UAA2BC,KAAK,EAAER,OAAO,CAACE,CAAD,CAAP,CAAWO;QAA7C,CAAb;MACD,CAFD,MAEO,IACLT,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,KAAoB,SAApB,IACAJ,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,KAAoB,QAFf,EAGL;QACAL,UAAU,CAACM,IAAX,CAAgB;UAAEC,KAAK,EAAEN,OAAO,CAACE,CAAD,CAAP,CAAWK,KAApB;UAA2BC,KAAK,EAAER,OAAO,CAACE,CAAD,CAAP,CAAWO;QAA7C,CAAhB;MACD;IACF;;IACD5B,iBAAiB,CAACiB,OAAD,CAAjB;IACAf,oBAAoB,CAACgB,UAAD,CAApB;EACD,CAlBD;;EAoBAW,WAAW,GAAG,MAAM;IAClBpC,MAAM,CACHkB,GADH,CAEI,2JAFJ,EAGI;MACEC,SAAS,EAAE;QACTkB,OAAO,EAAEC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,WAAZ,CADR;QAETC,QAAQ,EAAE,KAAKF,KAAL,CAAWG,kBAFZ;QAGTC,MAAM,EAAEL,QAAQ,CAAC,KAAKC,KAAL,CAAWK,UAAZ;MAHP;IADb,CAHJ,EAWGvB,IAXH,CAWSP,GAAD,IAAS;MACb,MAAM+B,QAAQ,GAAG/B,GAAG,CAACC,IAAJ,CAASO,MAAT,CAAgB,CAAhB,EAAmBwB,KAAnB,CAAyB,CAAzB,EAA4BC,aAA5B,CAA0C,CAA1C,EAA6CC,IAA9D;MACA,KAAKC,QAAL,CAAc;QAAEC,aAAa,EAAEL;MAAjB,CAAd;MACA7B,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKsB,KAAL,CAAWW,aAAvC,EAAsDL,QAAtD;IACD,CAfH;EAgBD,CAjBD;;EAmBA,MAAMM,UAAU,GAAG,MAAM;IACvBnC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,UAA5B;IACA,IAAI0C,CAAC,GAAGC,cAAc,EAAtB;EACD,CAHD;;EAKA,MAAMC,eAAe,GAAG,MAAM;IAC5B,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE,QAAC,QAAD;QACE,SAAS,EAAC,cADZ;QAEE,WAAW,EAAE,oBAFf;QAGE,gBAAgB,EAAE,MAAM,qCAH1B;QAIE,IAAI,EAAExD,QAAQ,CAACyD,IAAT,CAAcC,MAJtB;QAKE,OAAO,EAAElD,cALX,CAME;QANF;QAOE,cAAc,EAAE,SAASmD,UAAT,CAAoBC,SAApB,EAA+B;UAC7C1C,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCyC,SAAjC;UACA/C,aAAa,CAAC,CAAC+C,SAAD,EAAYhD,UAAU,CAAC,CAAD,CAAtB,EAA2BA,UAAU,CAAC,CAAD,CAArC,CAAD,CAAb;QACD;MAVH;QAAA;QAAA;QAAA;MAAA,QADF,eAcE,QAAC,QAAD;QACE,SAAS,EAAC,eADZ;QAEE,WAAW,EAAE,sBAFf;QAGE,gBAAgB,EAAE,MAAM,uCAH1B;QAIE,IAAI,EAAEZ,QAAQ,CAACyD,IAAT,CAAcC,MAJtB;QAKE,OAAO,EAAEhD,iBALX;QAME,cAAc,EAAE,SAASiD,UAAT,CAAoBC,SAApB,EAA+B;UAC7C1C,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCyC,SAAjC;UACA/C,aAAa,CAAC,CAACD,UAAU,CAAC,CAAD,CAAX,EAAgBgD,SAAhB,EAA2BhD,UAAU,CAAC,CAAD,CAArC,CAAD,CAAb;QACD,CATH,CAUE;;MAVF;QAAA;QAAA;QAAA;MAAA,QAdF,eA2BE,QAAC,QAAD;QACE,SAAS,EAAC,cADZ;QAEE,WAAW,EAAE,oBAFf;QAGE,gBAAgB,EAAE,MAAM,qCAH1B;QAIE,IAAI,EAAEZ,QAAQ,CAACyD,IAAT,CAAcC,MAJtB;QAKE,OAAO,EAAElD,cALX;QAME,cAAc,EAAE,SAASmD,UAAT,CAAoBC,SAApB,EAA+B;UAC7C1C,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCyC,SAAjC;UACA/C,aAAa,CAAC,CAACD,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,EAA+BgD,SAA/B,CAAD,CAAb;QACD,CATH,CAUE;;MAVF;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA0CD,CA3CD;;EA6CA,oBACE;IAAK,EAAE,EAAC,YAAR;IAAA,wBACE;MAAK,SAAS,EAAC,QAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,SAAf;MAAA,WACGJ,eAAe,EADlB,eAEE;QAAK,SAAS,EAAC,QAAf;QAAA,uBACE,QAAC,MAAD;UACE,SAAS,EAAC,eADZ;UAEE,IAAI,EAAEvD,MAAM,CAAC4D,KAAP,CAAaH,MAFrB;UAGE,KAAK,EAAEzD,MAAM,CAAC6D,MAAP,CAAcC,OAHvB;UAIE,OAAO,EAAE,MAAM;YACbV,UAAU;UACX,CANH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA5ID;;GAAMlD,U;;KAAAA,U;AA8IN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}