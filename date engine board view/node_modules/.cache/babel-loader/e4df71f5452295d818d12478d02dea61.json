{"ast":null,"code":"var _jsxFileName = \"/Users/josh/code/personal/monday/quickstart-react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\"; //Explore more Monday React Components here: https://style.monday.com/\n\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport TextField from \"monday-ui-react-core/dist/TextField.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.getBoardData = () => {\n      monday.api(\"query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name id column_values { id title type text } } } }\", {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        console.log(\"getBoardData call\", res.data);\n      });\n    };\n\n    this.getItemInfo = itemIdentity => {\n      monday.api(\"query ($boardIds: [Int], $itemId: [Int]) { boards (ids:$boardIds) { name items (ids:$itemId) { name id column_values { id title type text } } } }\", {\n        variables: {\n          boardIds: this.state.context.boardIds,\n          itemId: parseInt(itemIdentity)\n        }\n      }).then(res => {\n        console.log(\"getItemInfo call\", res.data);\n      });\n    };\n\n    this.getBoardOptions = () => {\n      this.getBoardData();\n      const opts = this.state.boardData.boards;\n      let arr = [];\n      let boardName = \"\";\n      let boardValue = \"\";\n\n      for (let i = 0; i < opts.length(); i++) {\n        boardName = opts.boards[i].name;\n        boardValue = opts.boards[i];\n        arr += {\n          boardName,\n          boardValue\n        };\n        console.log(arr);\n      }\n\n      return arr;\n    };\n\n    this.functionTest = () => {\n      console.log(\"function call\");\n      this.getBoardOptions();\n      return [{\n        value: \"Red\",\n        label: \"Red\"\n      }];\n    };\n\n    this.comboTest = () => {\n      const itId = this.state.boardData.boards[1].items[0].id;\n      console.log(\"comboTest: \", itId);\n      this.getItemInfo(itId);\n    };\n\n    this.state = {\n      settings: {\n        text: \"Column Title\",\n        columnName: \"date\"\n      },\n      context: {},\n      searchOptions: {\n        boardPrompt: \"Choose Board\",\n        boardOptions: []\n      },\n      boardData: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: []\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    // listens to changes in settings and sends to getSettings\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n      console.log(\"settings listen\", this.state.settings); // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    }); // listens to context\n\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(\"context listen\", res.data);\n      this.getBoardData();\n    });\n  }\n  /* info getting functions */\n  // get general board data\n\n\n  // updateDate = () => {\n  //   monday.api(\n  //     'mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }',\n  //     {\n  //       variables: {\n  //         boardID: this.state.context.boardIds,\n  //         itemID: this.state.dateIDS[0],\n  //       },\n  //       columnID: this.state.dateColumns[0],\n  //     }\n  //   );\n  //   console.log(\"end mutation\");\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"enter info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsField\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: this.state.searchOptions.boardPrompt,\n              size: Dropdown.size.MEDIUM,\n              className: \"dropdown-stories-styles_spacing\",\n              options: this.functionTest()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsField\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"\\xB1 Days\",\n              size: TextField.sizes.MEDIUM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsField\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"MM/DD/YYYY\",\n              size: TextField.sizes.MEDIUM,\n              type: TextField.types.DATE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: Button.sizes.MEDIUM,\n              color: Button.colors.POSITIVE,\n              onClick: () => {\n                this.functionTest();\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","Dropdown","TextField","Button","monday","App","Component","constructor","props","getBoardData","api","variables","boardIds","state","context","then","res","setState","boardData","data","console","log","getItemInfo","itemIdentity","itemId","parseInt","getBoardOptions","opts","boards","arr","boardName","boardValue","i","length","name","functionTest","value","label","comboTest","itId","items","id","settings","text","columnName","searchOptions","boardPrompt","boardOptions","dateIDS","dateColumns","itemIds","componentDidMount","listen","render","size","MEDIUM","sizes","types","DATE","colors","POSITIVE"],"sources":["/Users/josh/code/personal/monday/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport Dropdown from \"monday-ui-react-core/dist/Dropdown.js\";\nimport TextField from \"monday-ui-react-core/dist/TextField.js\";\nimport Button from \"monday-ui-react-core/dist/Button.js\";\n\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {\n        text: \"Column Title\",\n        columnName: \"date\",\n      },\n      context: {},\n      searchOptions: {\n        boardPrompt: \"Choose Board\",\n        boardOptions: [],\n      },\n      boardData: {},\n      boards: [],\n      dateIDS: [],\n      dateColumns: [],\n      itemIds: [],\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n\n    // listens to changes in settings and sends to getSettings\n    monday.listen(\"settings\", (res) => {\n      this.setState({ settings: res.data });\n      console.log(\"settings listen\", this.state.settings);\n      // {\"fieldName\": \"fieldValue\", \"fieldName2\": \"fieldValue2\"...}\n    });\n\n    // listens to context\n    monday.listen(\"context\", (res) => {\n      this.setState({ context: res.data });\n      console.log(\"context listen\", res.data);\n      this.getBoardData();\n    });\n  }\n\n  /* info getting functions */\n\n  // get general board data\n  getBoardData = () => {\n    monday\n      .api(\n        \"query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name id column_values { id title type text } } } }\",\n        { variables: { boardIds: this.state.context.boardIds } }\n      )\n      .then((res) => {\n        this.setState({ boardData: res.data });\n        console.log(\"getBoardData call\", res.data);\n      });\n  };\n\n  // basic retrieve item info by id\n  /**\n   * retrievs item info by id #\n   * @param {*} res\n   * @param {*} itemID\n   * @return id (string), name (string), column values: (column id (string), column title (string), type (string), text (string))\n   */\n  getItemInfo = (itemIdentity) => {\n    monday\n      .api(\n        \"query ($boardIds: [Int], $itemId: [Int]) { boards (ids:$boardIds) { name items (ids:$itemId) { name id column_values { id title type text } } } }\",\n        {\n          variables: {\n            boardIds: this.state.context.boardIds,\n            itemId: parseInt(itemIdentity),\n          },\n        }\n      )\n      .then((res) => {\n        console.log(\"getItemInfo call\", res.data);\n      });\n  };\n\n  getBoardOptions = () => {\n    this.getBoardData();\n    const opts = this.state.boardData.boards;\n    let arr = [];\n    let boardName = \"\";\n    let boardValue = \"\";\n\n    for (let i = 0; i < opts.length(); i++) {\n      boardName = opts.boards[i].name;\n      boardValue = opts.boards[i];\n      arr += { boardName, boardValue };\n      console.log(arr);\n    }\n\n    return arr;\n  };\n\n  //get item by name\n  // getItemIdFromName = () => {\n  //   const items = this.state.boardData.boards;\n  //   for (int i = 0)\n  //   console.log(\"test\", items);\n  // };\n\n  // context \\/\n\n  // getDateColumnInfo = (res) => {\n  //   console.log(\"detail\", res.data.boards[0].columns);\n  //   let dateIds = [];\n  //   for (let i = 0; i < res.data.boards[0].columns.length; i++) {\n  //     let tempPair = [];\n  //     if (res.data.boards[0].columns[i].type === \"date\") {\n  //       this.state.dateColumns.push(res.data.boards[0].columns[i].title);\n  //       tempPair = [\n  //         res.data.boards[0].columns[i].title,\n  //         res.data.boards[0].columns[i].id,\n  //       ];\n  //       dateIds.push(tempPair);\n  //     }\n  //   }\n  //   this.setState({ dateIDS: dateIds });\n  //   console.log(\"id array\", dateIds);\n  //   console.log(\"date columns\", this.state.dateColumns);\n\n  //   // const st = dateIds;\n  //   // return st;\n  // };\n\n  functionTest = () => {\n    console.log(\"function call\");\n    this.getBoardOptions();\n    return [\n      {\n        value: \"Red\",\n        label: \"Red\",\n      },\n    ];\n  };\n\n  comboTest = () => {\n    const itId = this.state.boardData.boards[1].items[0].id;\n    console.log(\"comboTest: \", itId);\n    this.getItemInfo(itId);\n  };\n\n  // updateDate = () => {\n  //   monday.api(\n  //     'mutation ($boardID: [Int], $itemID: [String], $columnID) change_column_value(board_id:$boardID, item_id: $itemID, column_id: $columnID, value: \"{\"date\":\"2022-07-21\"}\") { id } }',\n  //     {\n  //       variables: {\n  //         boardID: this.state.context.boardIds,\n  //         itemID: this.state.dateIDS[0],\n  //       },\n  //       columnID: this.state.dateColumns[0],\n  //     }\n  //   );\n  //   console.log(\"end mutation\");\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"mainSection\">\n          <div className=\"header\">\n            <h1>enter info:</h1>\n          </div>\n          <div className=\"options\">\n            <div className=\"optionsField\">\n              <Dropdown\n                placeholder={this.state.searchOptions.boardPrompt}\n                size={Dropdown.size.MEDIUM}\n                className=\"dropdown-stories-styles_spacing\"\n                options={this.functionTest()}\n              />\n            </div>\n            <div className=\"optionsField\">\n              <TextField placeholder=\"± Days\" size={TextField.sizes.MEDIUM} />\n            </div>\n            <div className=\"optionsField\">\n              <TextField\n                placeholder=\"MM/DD/YYYY\"\n                size={TextField.sizes.MEDIUM}\n                type={TextField.types.DATE}\n              />\n            </div>\n            <div className=\"button\">\n              <Button\n                size={Button.sizes.MEDIUM}\n                color={Button.colors.POSITIVE}\n                onClick={() => {\n                  this.functionTest();\n                }}\n              >\n                Update\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}